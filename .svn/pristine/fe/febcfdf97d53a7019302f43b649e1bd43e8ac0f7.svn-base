#include <stdint.h>
#include "OneWire.h"
#include "Adafruit_NeoPixel.h"
#include "OneWire.h"
#include "RCSwitch.h"

#define NUMBER_OF_NEOPIXELS 1

#define RF_RX_DATA_PIN      2    //  Arduino micro pin 5
#define TEMPERATURE_PIN     3    //  Arduino micro pin 6
#define RF_RX_POWER_PIN     4    //  Arduino micro pin 7
#define NEOPIXEL_PIN        5    //  Arduino micro pin 8
#define BUZZER              6    //  Arduino micro pin 9
#define PUSH_BUTTON         7    //  Arduino micro pin 10
#define RF_TX_DATA_PIN      8    //  Arduino micro pin 11
#define RF_TX_POWER_PIN     9    //  Arduino micro pin 12

#define  OFF            0
#define  ON             1

#define COLOR_OFF      0 
#define COLOR_GREEN    1 
#define COLOR_YELLOW   2 
#define COLOR_BLUE     3
#define COLOR_CYAN     4 
#define COLOR_WHITE    5
#define COLOR_MAGENTA  6 
#define COLOR_RED      7 

class EasyPeasy
{
  friend class OneWire;
public:
	EasyPeasy();
	~EasyPeasy(void);
        void begin(void);
        void SetLedColors(uint8_t red, uint8_t green, uint8_t blue);
        void SetLedColor(byte colourId, byte intensity);   
	float GetTemperatureCelcuis();
        float GetTemperatureFahrenheit();
        uint32_t GetIdPart0();
        uint32_t GetIdPart1();
        void BuzzerOn(void);
        void BuzzerOff(void);
        bool IsPushButtonPressed(void);
        void RfTransmitterPower(bool state);
        void RfTransmitData(uint32_t dataByte);
        void RfTransmitText(uint32_t dataByte);
        void RfReceiverPower(bool state);
        bool RfReceiveData(uint32_t* rxData, uint32_t timeout);
        bool RfReceiveDataDetails(uint32_t* rxData, uint32_t timeout);

private:	
    byte data[12];
    byte addr[8];
    uint32_t ledColor;
    void UpdateLED(void);
};
